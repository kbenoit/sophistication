% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BradleyTerry_functions.R
\name{bt_input_make}
\alias{bt_input_make}
\title{format Crowdflower data for BT analysis}
\usage{
bt_input_make(
  x = NULL,
  file = NULL,
  format = c("chameleons", "binomial"),
  remove_gold = TRUE,
  remove_screeners = remove_gold,
  covars = FALSE,
  covars_baseline = FALSE,
  covars_pos = FALSE,
  normalize = TRUE,
  ...
)
}
\arguments{
\item{x}{data.frame of results, if already loaded}

\item{file}{character containing the file with the Crowdflower results (.csv
format). One of \code{x} or \code{file} must be specified.}

\item{format}{the format of the data: \describe{
\item{\code{"chameleons"}}{similar to
\code{\link[BradleyTerry2:chameleons]{BradleyTerry2::chameleons()}} a list of three data frames:
\code{easier} and \code{harder}, each with a single column \code{ID} with a
unique identifier for the snippet that won or lost, and of the same row
dimensionality since each row corresponds to a single pairwise comparison;
and \code{predictors}, a data.frame of predictors associated with each
\code{ID} where the row.name corresponds to an ID in the in the
\code{easier} and \code{harder} data.frames.}
\item{\code{"binomial"}}{similar to extended example for
\code{\link[BradleyTerry2:baseball]{BradleyTerry2::baseball()}} in \code{\link[BradleyTerry2:BTm]{BradleyTerry2::BTm()}}.}
}}

\item{remove_gold}{if \code{TRUE}, remove "gold" sentences from analysis}

\item{remove_screeners}{if \code{TRUE}, remove "screener" sentences from
analysis}

\item{covars}{logical; if \code{TRUE} then add covariates for each snippet,
taken directly from the Crowdflower saved data.  Additional arguments to
\code{\link[=covars_make]{covars_make()}} can be passed through \code{...}}

\item{covars_baseline}{logical; if \code{TRUE}, add summary baseline
frequencies compared to Google and Brown corpora speech computed by
\code{\link[=covars_make_baselines]{covars_make_baselines()}}}

\item{covars_pos}{logical; if \code{TRUE}, add frequencies of parts of speech
computed by \code{\link[=covars_make_pos]{covars_make_pos()}}}

\item{normalize}{if \code{TRUE} return appropriately normalized covariates,
including parts of speech if applicable}

\item{...}{additional arguments passed to \code{\link[=covars_make]{covars_make()}}}
}
\value{
a data.frame suitable for analysis by \link[BradleyTerry2:BTm]{BTm}
}
\description{
Format Crowdflower results for analysis by the BradleyTerry2 package.  Can
accept covariates computed by  \code{\link[=covars_make]{covars_make()}}.
}
\examples{
# compute abilities for the BT model from CF data
\dontrun{
require(BradleyTerry2)

## compute BT model without covariates
# in binomial format
inputdata1a <- bt_input_make(file = "data/CF_results/f921916.csv", format = "binomial")
BTmodel1a <- BTm(cbind(win1, win2), snippet1, snippet2, data = inputdata1a)
BTabils1a <- BTabilities(BTmodel1a)
head(BTabils1a)
# in "chameleons" format
inputdata1b <- bt_input_make(file = "data/CF_results/f921916.csv", format = "chameleons")
BTmodel1b <- BTm(player1 = easier, player2 = harder, id = "ID", data = inputdata1b)
BTabils1b <- BTabilities(BTmodel1b)
head(BTabils1b)

## compute BT model with covariates
inputdata2 <- bt_input_make(file = "data/CF_results/f921916.csv",
                            covars = TRUE, readability_measure = "Flesch")
BTmodel2 <- BTm(player1 = easier, player2 = harder,
                 formula = ~ W[ID] + St[ID] + C[ID] + Sy[ID] + Flesch[ID] + (1|ID),
                 id = "ID", data = inputdata2)
BTabils2 <- BTabilities(BTmodel2)
head(BTabils2[order(BTabils2[, 1], decreasing = TRUE), ], 10)

## compute BT model with covariates and POS
options(PYTHON_PATH = "/usr/local/bin")  # needed on Ken's system
inputdata3 <- bt_input_make(file = "data/CF_results/f921916.csv",
                            covars = TRUE, covars_pos = TRUE,
                            readability_measure = "Flesch")
BTmodel3 <- BTm(player1 = easier, player2 = harder,
                 formula = ~ W[ID] + St[ID] + C[ID] + Sy[ID] + Flesch[ID] +
                             ADJ[ID] + VERB[ID] + NOUN[ID] + (1|ID),
                 id = "ID", data = inputdata3)
BTabils3 <- BTabilities(BTmodel3)
head(BTabils3[order(BTabils3[, 1], decreasing = TRUE), ], 10)

}
}
